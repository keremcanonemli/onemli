(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{281:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,d=u["".concat(o,".").concat(m)]||u[m]||b[m]||i;return r?a.a.createElement(d,l(l({ref:t},s),{},{components:r})):a.a.createElement(d,l({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},89:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return l})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(8),i=(r(0),r(281)),o={id:"iterable",title:"Iterable",sidebar_label:"Iterable",slug:"iterable",custom_edit_url:null},l={unversionedId:"python/iterator_generator/iterable",id:"python/iterator_generator/iterable",isDocsHomePage:!1,title:"Iterable",description:"Iteration is a generic term that describes the procedure for taking elements of something in turn. In a more general sense, it is a sequence of instructions that is repeated a certain number of times or before the specified condition is fulfilled.",source:"@site/docs/python/iterator_generator/1_iterable.md",slug:"/python/iterator_generator/iterable",permalink:"/tr/docs/python/iterator_generator/iterable",editUrl:null,version:"current",sidebar_label:"Iterable",sidebar:"someSidebar",previous:{title:"Tasks",permalink:"/tr/docs/python/useful_modules/tasks"},next:{title:"Iterators",permalink:"/tr/docs/python/iterator_generator/iterators"}},c=[],s={toc:c};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Iteration is a generic term that describes the procedure for taking elements of something in turn. In a more general sense, it is a sequence of instructions that is repeated a certain number of times or before the specified condition is fulfilled."),Object(i.b)("p",null,"An iterable is an object that can return elements one at a time. It is also an object from which an iterator can be derived."),Object(i.b)("p",null,"Examples of iterables:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"all sequences: list, string, tuple"),Object(i.b)("li",{parentName:"ul"},"dicts"),Object(i.b)("li",{parentName:"ul"},"files")),Object(i.b)("p",null,"In Python, the ",Object(i.b)("inlineCode",{parentName:"p"},"iter")," function is responsible for getting an iterator:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [1]: lista = [1, 2, 3]\n\nIn [2]: iter(lista)\nOut[2]: <list_iterator at 0xb4ede28c>\n")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"iter")," function will work on any object that has ",Object(i.b)("inlineCode",{parentName:"p"},"__iter__")," or ",Object(i.b)("inlineCode",{parentName:"p"},"__getitem__")," method. ",Object(i.b)("inlineCode",{parentName:"p"},"__iter__")," method returns an iterator. If this method is not available, ",Object(i.b)("inlineCode",{parentName:"p"},"iter")," function checks if there is ",Object(i.b)("inlineCode",{parentName:"p"},"__getitem__")," method that allows getting elements by index."),Object(i.b)("p",null,"If method ",Object(i.b)("inlineCode",{parentName:"p"},"__getitem__")," is present an iterator is returned, which iterates through the elements using index (starting with 0). In practice, the use of ",Object(i.b)("inlineCode",{parentName:"p"},"__getitem__")," means that all sequence elements are iterable objects. For example, a list, a tuple, a string. Although these data types have ",Object(i.b)("inlineCode",{parentName:"p"},"__iter__")," method."))}p.isMDXComponent=!0}}]);