(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{192:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return c}));var r=t(3),o=t(8),a=(t(0),t(280)),i={id:"pprint",title:"Pprint",sidebar_label:"12.5 Pprint",slug:"pprint",custom_edit_url:null},p={unversionedId:"python/useful_modules/pprint",id:"python/useful_modules/pprint",isDocsHomePage:!1,title:"Pprint",description:"Module pprint allows you to show Python objects beautifully. This saves the structure of object. You can use the result that produces pprint to create object. Module pprint is part of standard Python library.",source:"@site/docs/python/useful_modules/5_pprint.md",slug:"/python/useful_modules/pprint",permalink:"/tr/docs/python/useful_modules/pprint",editUrl:null,version:"current",sidebar_label:"12.5 Pprint",sidebar:"someSidebar",previous:{title:"Tabulate",permalink:"/tr/docs/python/useful_modules/tabulate"},next:{title:"Tasks",permalink:"/tr/docs/python/useful_modules/tasks"}},l=[{value:"Nesting restriction",id:"nesting-restriction",children:[]},{value:"pformat",id:"pformat",children:[]},{value:"Additional material",id:"additional-material",children:[]}],s={toc:l};function c(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Module ",Object(a.b)("inlineCode",{parentName:"p"},"pprint")," allows you to show Python objects beautifully. This saves the structure of object. You can use the result that produces ",Object(a.b)("inlineCode",{parentName:"p"},"pprint")," to create object. Module ",Object(a.b)("inlineCode",{parentName:"p"},"pprint")," is part of standard Python library."),Object(a.b)("p",null,"The simplest use of module is ",Object(a.b)("inlineCode",{parentName:"p"},"pprint")," function. For example, a dictionary with nested dictionaries is displayed as follows:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [6]: london_co = {'r1': {'hostname': 'london_r1', 'location': '21 New Globe Wal\n   ...: k', 'vendor': 'Cisco', 'model': '4451', 'IOS': '15.4', 'IP': '10.255.0.1'}\n   ...: , 'r2': {'hostname': 'london_r2', 'location': '21 New Globe Walk', 'vendor\n   ...: ': 'Cisco', 'model': '4451', 'IOS': '15.4', 'IP': '10.255.0.2'}, 'sw1': {'\n   ...: hostname': 'london_sw1', 'location': '21 New Globe Walk', 'vendor': 'Cisco\n   ...: ', 'model': '3850', 'IOS': '3.6.XE', 'IP': '10.255.0.101'}}\n   ...:\n\nIn [7]: from pprint import pprint\n\nIn [8]: pprint(london_co)\n{'r1': {'IOS': '15.4',\n        'IP': '10.255.0.1',\n        'hostname': 'london_r1',\n        'location': '21 New Globe Walk',\n        'model': '4451',\n        'vendor': 'Cisco'},\n 'r2': {'IOS': '15.4',\n        'IP': '10.255.0.2',\n        'hostname': 'london_r2',\n        'location': '21 New Globe Walk',\n        'model': '4451',\n        'vendor': 'Cisco'},\n 'sw1': {'IOS': '3.6.XE',\n         'IP': '10.255.0.101',\n         'hostname': 'london_sw1',\n         'location': '21 New Globe Walk',\n         'model': '3850',\n         'vendor': 'Cisco'}}\n")),Object(a.b)("p",null,"List of lists:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [13]: interfaces = [['FastEthernet0/0', '15.0.15.1', 'YES', 'manual', 'up', 'up\n    ...: '], ['FastEthernet0/1', '10.0.1.1', 'YES', 'manual', 'up', 'up'], ['FastE\n    ...: thernet0/2', '10.0.2.1', 'YES', 'manual', 'up', 'down']]\n    ...:\n\nIn [14]: pprint(interfaces)\n[['FastEthernet0/0', '15.0.15.1', 'YES', 'manual', 'up', 'up'],\n ['FastEthernet0/1', '10.0.1.1', 'YES', 'manual', 'up', 'up'],\n ['FastEthernet0/2', '10.0.2.1', 'YES', 'manual', 'up', 'down']]\n")),Object(a.b)("p",null,"String:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [18]: tunnel\nOut[18]: '\\ninterface Tunnel0\\n ip address 10.10.10.1 255.255.255.0\\n ip mtu 1416\\n ip ospf hello-interval 5\\n tunnel source FastEthernet1/0\\n tunnel protection ipsec profile DMVPN\\n'\n\nIn [19]: pprint(tunnel)\n('\\n'\n 'interface Tunnel0\\n'\n ' ip address 10.10.10.1 255.255.255.0\\n'\n ' ip mtu 1416\\n'\n ' ip ospf hello-interval 5\\n'\n ' tunnel source FastEthernet1/0\\n'\n ' tunnel protection ipsec profile DMVPN\\n')\n")),Object(a.b)("h2",{id:"nesting-restriction"},"Nesting restriction"),Object(a.b)("p",null,"Function ",Object(a.b)("inlineCode",{parentName:"p"},"pprint")," has an additional ",Object(a.b)("strong",{parentName:"p"},"depth")," parameter that allows limiting the depth of data structure display."),Object(a.b)("p",null,"For example, there\u2019s a dictionary:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [3]: result = {\n   ...:  'interface Tunnel0': [' ip unnumbered Loopback0',\n   ...:   ' tunnel mode mpls traffic-eng',\n   ...:   ' tunnel destination 10.2.2.2',\n   ...:   ' tunnel mpls traffic-eng priority 7 7',\n   ...:   ' tunnel mpls traffic-eng bandwidth 5000',\n   ...:   ' tunnel mpls traffic-eng path-option 10 dynamic',\n   ...:   ' no routing dynamic'],\n   ...:  'ip access-list standard LDP': [' deny   10.0.0.0 0.0.255.255',\n   ...:   ' permit 10.0.0.0 0.255.255.255'],\n   ...:  'router bgp 100': {' address-family vpnv4': ['  neighbor 10.2.2.2 activat\n   ...: e',\n   ...:    '  neighbor 10.2.2.2 send-community both',\n   ...:    '  exit-address-family'],\n   ...:   ' bgp bestpath igp-metric ignore': [],\n   ...:   ' bgp log-neighbor-changes': [],\n   ...:   ' neighbor 10.2.2.2 next-hop-self': [],\n   ...:   ' neighbor 10.2.2.2 remote-as 100': [],\n   ...:   ' neighbor 10.2.2.2 update-source Loopback0': [],\n   ...:   ' neighbor 10.4.4.4 remote-as 40': []},\n   ...:  'router ospf 1': [' mpls ldp autoconfig area 0',\n   ...:   ' mpls traffic-eng router-id Loopback0',\n   ...:   ' mpls traffic-eng area 0',\n   ...:   ' network 10.0.0.0 0.255.255.255 area 0']}\n   ...:\n")),Object(a.b)("p",null,"You can only display keys with depth equal to 1:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [5]: pprint(result, depth=1)\n{'interface Tunnel0': [...],\n 'ip access-list standard LDP': [...],\n 'router bgp 100': {...},\n 'router ospf 1': [...]}\n")),Object(a.b)("p",null,"Hidden nesting levels are replaced with ",Object(a.b)("inlineCode",{parentName:"p"},"..."),"."),Object(a.b)("p",null,"If you specify a depth of 2, the next level is displayed:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [6]: pprint(result, depth=2)\n{'interface Tunnel0': [' ip unnumbered Loopback0',\n                       ' tunnel mode mpls traffic-eng',\n                       ' tunnel destination 10.2.2.2',\n                       ' tunnel mpls traffic-eng priority 7 7',\n                       ' tunnel mpls traffic-eng bandwidth 5000',\n                       ' tunnel mpls traffic-eng path-option 10 dynamic',\n                       ' no routing dynamic'],\n 'ip access-list standard LDP': [' deny   10.0.0.0 0.0.255.255',\n                                 ' permit 10.0.0.0 0.255.255.255'],\n 'router bgp 100': {' address-family vpnv4': [...],\n                    ' bgp bestpath igp-metric ignore': [],\n                    ' bgp log-neighbor-changes': [],\n                    ' neighbor 10.2.2.2 next-hop-self': [],\n                    ' neighbor 10.2.2.2 remote-as 100': [],\n                    ' neighbor 10.2.2.2 update-source Loopback0': [],\n                    ' neighbor 10.4.4.4 remote-as 40': []},\n 'router ospf 1': [' mpls ldp autoconfig area 0',\n                   ' mpls traffic-eng router-id Loopback0',\n                   ' mpls traffic-eng area 0',\n                   ' network 10.0.0.0 0.255.255.255 area 0']}\n")),Object(a.b)("h2",{id:"pformat"},"pformat"),Object(a.b)("p",null,"pformat() is a function that displays the result as a string. It is convenient to use if you want to write a data structure into a file, for example to log."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},"In [15]: from pprint import pformat\n\nIn [16]: formatted_result = pformat(result)\n\nIn [17]: print(formatted_result)\n{'interface Tunnel0': [' ip unnumbered Loopback0',\n                       ' tunnel mode mpls traffic-eng',\n                       ' tunnel destination 10.2.2.2',\n                       ' tunnel mpls traffic-eng priority 7 7',\n                       ' tunnel mpls traffic-eng bandwidth 5000',\n                       ' tunnel mpls traffic-eng path-option 10 dynamic',\n                       ' no routing dynamic'],\n 'ip access-list standard LDP': [' deny   10.0.0.0 0.0.255.255',\n                                 ' permit 10.0.0.0 0.255.255.255'],\n 'router bgp 100': {' address-family vpnv4': ['  neighbor 10.2.2.2 activate',\n                                              '  neighbor 10.2.2.2 '\n                                              'send-community both',\n                                              '  exit-address-family'],\n                    ' bgp bestpath igp-metric ignore': [],\n                    ' bgp log-neighbor-changes': [],\n                    ' neighbor 10.2.2.2 next-hop-self': [],\n                    ' neighbor 10.2.2.2 remote-as 100': [],\n                    ' neighbor 10.2.2.2 update-source Loopback0': [],\n                    ' neighbor 10.4.4.4 remote-as 40': []},\n 'router ospf 1': [' mpls ldp autoconfig area 0',\n                   ' mpls traffic-eng router-id Loopback0',\n                   ' mpls traffic-eng area 0',\n                   ' network 10.0.0.0 0.255.255.255 area 0']}\n")),Object(a.b)("h2",{id:"additional-material"},"Additional material"),Object(a.b)("p",null,"Documentation:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://docs.python.org/3/library/pprint.html"},"pprint \u2014 Data pretty printer")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"https://pymotw.com/3/pprint/"},"PyMOTW. pprint \u2014 Pretty-Print Data Structures"))))}c.isMDXComponent=!0},280:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),c=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=c(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||a;return t?o.a.createElement(m,p(p({ref:n},s),{},{components:t})):o.a.createElement(m,p({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=b;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var s=2;s<a;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);