(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{253:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return b}));var a=t(3),l=t(8),r=(t(0),t(280)),c={id:"lists",title:"Lists",sidebar_label:"4.3 Lists",slug:"lists",custom_edit_url:null},p={unversionedId:"python/data_structures/lists",id:"python/data_structures/lists",isDocsHomePage:!1,title:"Lists",description:"List in Python is:",source:"@site/docs/python/data_structures/3_lists.md",slug:"/python/data_structures/lists",permalink:"/docs/python/data_structures/lists",editUrl:null,version:"current",sidebar_label:"4.3 Lists",sidebar:"someSidebar",previous:{title:"Strings",permalink:"/docs/python/data_structures/strings"},next:{title:"Dictionary",permalink:"/docs/python/data_structures/dictionary"}},s=[{value:"<code>join</code>",id:"join",children:[]},{value:"<code>append</code>",id:"append",children:[]},{value:"<code>extend</code>",id:"extend",children:[]},{value:"<code>pop</code>",id:"pop",children:[]},{value:"<code>remove</code>",id:"remove",children:[]},{value:"<code>index</code>",id:"index",children:[]},{value:"<code>insert</code>",id:"insert",children:[]},{value:"<code>sort</code>",id:"sort",children:[]}],o={toc:s};function b(e){var n=e.components,t=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"List in Python is:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"sequence of elements separated by comma and enclosed in square brackets"),Object(r.b)("li",{parentName:"ul"},"mutable ordered data type")),Object(r.b)("p",null,"Examples of lists:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"list1 = [10,20,30,77]\nlist2 = ['one', 'dog', 'seven']\nlist3 = [1, 20, 4.0, 'word']\n")),Object(r.b)("p",null,"Creating a list using a literal:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = [10, 20, 30, 50]\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Literal is an expression that creates an object."))),Object(r.b)("p",null,"Create a list using ",Object(r.b)("inlineCode",{parentName:"p"},"list")," function:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"list1 = list('router')\n\nprint(list1)\n\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['r', 'o', 'u', 't', 'e', 'r']\n")),Object(r.b)("p",null,"Since a list is an ordered data type just like a string, in lists you can refer to an item by number, make slices:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"list3 = [1, 20, 4.0, 'word']\n\nprint(list3[1])\n\nprint(list3[1::])\n\nprint(list3[-1])\n\nprint(list3[::-1])\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"20\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"[20, 4.0, 'word']\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"word\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['word', 4.0, 20, 1]\n")),Object(r.b)("p",null,"You can reverse list by ",Object(r.b)("inlineCode",{parentName:"p"},"reverse")," method:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '15', '20', '30', '100-200']\n\nprint(vlans)\n\nvlans.reverse()\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '15', '20', '30', '100-200']\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['100-200', '30', '20', '15', '10']\n")),Object(r.b)("p",null,"Since lists are mutable, list elements can be changed:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"print(list3)\n\nlist3[0] = 'test'\n\nprint(list3)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"[1, 20, 4.0, 'word']\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['test', 20, 4.0, 'word']\n")),Object(r.b)("p",null,"You can also create a list of lists. As in a regular list you can refer to items in nested lists:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"interfaces = [['FastEthernet0/0', '15.0.15.1', 'YES', 'manual', 'up', 'up'],['FastEthernet0/1', '10.0.1.1', 'YES', 'manual', 'up', 'up'],['FastEthernet0/2', '10.0.2.1', 'YES', 'manual', 'up', 'down']]\n\nprint(interfaces[0][0])\n\nprint(interfaces[2][0])\n\nprint(interfaces[2][1])\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"FastEthernet0/0\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"FastEthernet0/2\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"10.0.2.1\n")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"len")," function returns number of items in list:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"items = [1, 2, 3]\n\nprint(len(items))\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"3\n")),Object(r.b)("p",null,"And ",Object(r.b)("inlineCode",{parentName:"p"},"sorted")," function ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("u",null,"temporary"))," sorts list items in ascending order and returns a new list with sorted items:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"names = ['John', 'Michael', 'Antony']\n\nprint(sorted(names))\n\nprint(names)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['Antony', 'John', 'Michael']\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['John', 'Michael', 'Antony']\n")),Object(r.b)("p",null,"If you want to sort list items permanently use ",Object(r.b)("inlineCode",{parentName:"p"},"sort")," method"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"names = ['John', 'Michael', 'Antony']\n\nnames.sort()\n\nprint(names)\n")),Object(r.b)("p",null,"Output"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['Antony', 'John', 'Michael']\n")),Object(r.b)("h1",{id:"list-methods"},"List methods"),Object(r.b)("p",null,"List is a mutable data type, so it is important to note that most list methods change a list in place without returning anything."),Object(r.b)("h2",{id:"join"},Object(r.b)("inlineCode",{parentName:"h2"},"join")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"join")," collects a list of strings into one string with separator specified before join:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30']\nvlanlar = '#'.join(vlans)\n\nprint(vlanlar)\n\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"10#20#30\n")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Note")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Method ",Object(r.b)("inlineCode",{parentName:"p"},"join")," actually string method but since the value must be passed to it as a list, it is covered here."))),Object(r.b)("h2",{id:"append"},Object(r.b)("inlineCode",{parentName:"h2"},"append")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"append")," adds specified item to the end of list:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200']\n\nvlans.append('300')\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '20', '30', '100-200', '300']\n")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"append")," changes list on spot and does not return anything."),Object(r.b)("h2",{id:"extend"},Object(r.b)("inlineCode",{parentName:"h2"},"extend")),Object(r.b)("p",null,"If you want to combine two lists you can use one of two methods: ",Object(r.b)("inlineCode",{parentName:"p"},"extend")," method or addition operation. These methods have an important difference: ",Object(r.b)("inlineCode",{parentName:"p"},"extend")," changes list to which method is applied and addition returns a new list that consists of two."),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"extend"),":"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200']\n\nvlans2 = ['300', '400', '500']\n\nvlans.extend(vlans2)\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '20', '30', '100-200', '300', '400', '500']\n")),Object(r.b)("p",null,"Addition operation:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200']\nvlans2 = ['300', '400', '500']\nresult = vlans+vlans2\n\nprint(result)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '20', '30', '100-200', '300', '400', '500']\n")),Object(r.b)("h2",{id:"pop"},Object(r.b)("inlineCode",{parentName:"h2"},"pop")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"pop")," removes item that corresponds to specified number. Method returns this item:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200','300']\n\nprint(vlans.pop(-1))\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"100-200\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '20', '30']\n")),Object(r.b)("p",null,"Without number specified the last item in list is deleted."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200','300']\n\nprint(vlans.pop())\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"300\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '20', '30', '100-200']\n")),Object(r.b)("h2",{id:"remove"},Object(r.b)("inlineCode",{parentName:"h2"},"remove")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"remove")," removes specified item (",Object(r.b)("inlineCode",{parentName:"p"},"remove")," does not return deleted item):"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200']\n\nvlans.remove('20')\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '30', '100-200']\n")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"remove")," you must specify item to be deleted, not its index. If item number is specified, error occurs:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans.remove(-1)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},'Traceback (most recent call last):\n  File "C:/Users/....py", line 71, in <module>\n    vlans.remove(-1)\nValueError: list.remove(x): x not in list\n')),Object(r.b)("h2",{id:"index"},Object(r.b)("inlineCode",{parentName:"h2"},"index")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"index")," - returns the ",Object(r.b)("u",null,"first index")," of the passed value:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200']\n\nprint(vlans.index('30'))\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"2\n")),Object(r.b)("h2",{id:"insert"},Object(r.b)("inlineCode",{parentName:"h2"},"insert")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"insert")," allows to insert an item into a specific index in list:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = ['10', '20', '30', '100-200']\n\nvlans.insert(1, '15')\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"['10', '15', '20', '30', '100-200']\n")),Object(r.b)("h2",{id:"sort"},Object(r.b)("inlineCode",{parentName:"h2"},"sort")),Object(r.b)("p",null,"Method ",Object(r.b)("inlineCode",{parentName:"p"},"sort")," sorts list in place:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"vlans = [1, 50, 10, 15]\n\nvlans.sort()\n\nprint(vlans)\n")),Object(r.b)("p",null,"Output:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-python"},"[1, 10, 15, 50]\n")))}b.isMDXComponent=!0},280:function(e,n,t){"use strict";t.d(n,"a",(function(){return i})),t.d(n,"b",(function(){return m}));var a=t(0),l=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=l.a.createContext({}),b=function(e){var n=l.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},i=function(e){var n=b(e.components);return l.a.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return l.a.createElement(l.a.Fragment,{},n)}},d=l.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),i=b(t),d=a,m=i["".concat(c,".").concat(d)]||i[d]||u[d]||r;return t?l.a.createElement(m,p(p({ref:n},o),{},{components:t})):l.a.createElement(m,p({ref:n},o))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,c=new Array(r);c[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,c[1]=p;for(var o=2;o<r;o++)c[o]=t[o];return l.a.createElement.apply(null,c)}return l.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);