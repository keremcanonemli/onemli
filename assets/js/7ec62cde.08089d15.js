(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{183:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return p}));var i=t(3),r=t(8),l=(t(0),t(280)),a={id:"file_writing",title:"File Writing",sidebar_label:"7.3 File Writing",slug:"file_writing",custom_edit_url:null},o={unversionedId:"python/files/file_writing",id:"python/files/file_writing",isDocsHomePage:!1,title:"File Writing",description:"When writing information to a file, it is very important to specify the correct mode for opening the file, so as not to accidentally delete it:",source:"@site/docs/python/files/3_file_writing.md",slug:"/python/files/file_writing",permalink:"/docs/python/files/file_writing",editUrl:null,version:"current",sidebar_label:"7.3 File Writing",sidebar:"someSidebar",previous:{title:"File Reading",permalink:"/docs/python/files/file_reading"},next:{title:"File Closing",permalink:"/docs/python/files/file_closing"}},c=[{value:"<code>write</code>",id:"write",children:[]},{value:"<code>writelines</code>",id:"writelines",children:[]}],s={toc:c};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"When writing information to a file, it is very important to specify the correct mode for opening the file, so as not to accidentally delete it:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"w")," - open file for writing. If file exists, its content is removed"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a")," - open file to add data. Data is appended to the end of the file")),Object(l.b)("p",null,"Both modes create a file if it does not exist."),Object(l.b)("p",null,"The following methods are used to write to a file:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"write")," - write one line to file"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"writelines")," - allows to send as argument a list of strings")),Object(l.b)("h2",{id:"write"},Object(l.b)("inlineCode",{parentName:"h2"},"write")),Object(l.b)("p",null,"Method ",Object(l.b)("inlineCode",{parentName:"p"},"write")," expects string to write."),Object(l.b)("p",null,"For example, take a list of lines with configuration:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"cfg_lines = ['!',\n'service timestamps debug datetime msec localtime show-timezone year',\n'service timestamps log datetime msec localtime show-timezone year',\n'service password-encryption',\n'service sequence-numbers',\n'!',\n'no ip domain lookup',\n'!',\n'ip ssh version 2',\n'!']\n")),Object(l.b)("p",null,"Open r2.txt file in write mode:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"f = open('r2.txt', 'w')\n")),Object(l.b)("p",null,"Convert the list of commands to one large string using ",Object(l.b)("inlineCode",{parentName:"p"},"join"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"cfg_lines_as_string = '\\n'.join(cfg_lines)\n\nprint(cfg_lines_as_string)\n")),Object(l.b)("p",null,"Output"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"!\nservice timestamps debug datetime msec localtime show-timezone year\nservice timestamps log datetime msec localtime show-timezone year\nservice password-encryption\nservice sequence-numbers\n!\nno ip domain lookup\n!\nip ssh version 2\n!\n")),Object(l.b)("p",null,"Write a string to a file:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"f.write(cfg_lines_as_string)\n")),Object(l.b)("p",null,"Similarly, you can add a string manually:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"f.write('\\nhostname r2')\n")),Object(l.b)("p",null,"After work with file is finished, it should be closed:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"f.close()\n")),Object(l.b)("h2",{id:"writelines"},Object(l.b)("inlineCode",{parentName:"h2"},"writelines")),Object(l.b)("p",null,"Method ",Object(l.b)("inlineCode",{parentName:"p"},"writelines")," expects list of strings as an argument."),Object(l.b)("p",null,"Writing cfg_lines list into the file:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"cfg_lines = ['!',\n'service timestamps debug datetime msec localtime show-timezone year',\n'service timestamps log datetime msec localtime show-timezone year',\n'service password-encryption',\n'service sequence-numbers',\n'!',\n'no ip domain lookup',\n'!',\n'ip ssh version 2',\n'!']\n\nf = open('r2.txt', 'w')\n\nf.writelines(cfg_lines)\n\nf.close()\n")),Object(l.b)("p",null,"As a result, all lines in the list were written into one line because there was no symbol ",Object(l.b)("inlineCode",{parentName:"p"},"\\n")," at the end of lines. You can add newline character in different ways. For example, you can loop through a list:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"cfg_lines2 = []\n\nfor line in cfg_lines:\n    cfg_lines2.append(line + '\\n')\n\nprint(cfg_lines2)\n\n")),Object(l.b)("p",null,"Output"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"['!\\n', 'service timestamps debug datetime msec localtime show-timezone year\\n', 'service timestamps log datetime msec localtime show-timezone year\\n', 'service password-encryption\\n', 'service sequence-numbers\\n', '!\\n', 'no ip domain lookup\\n', '!\\n', 'ip ssh version 2\\n', '!\\n']\n\n")),Object(l.b)("p",null,"If the final list is written anew to the file, then it will already contain newlines:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-python"},"f = open('r2.txt', 'w')\n\nf.writelines(cfg_lines2)\n\nf.close()\n")))}p.isMDXComponent=!0},280:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return f}));var i=t(0),r=t.n(i);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},b=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(t),m=i,f=b["".concat(a,".").concat(m)]||b[m]||u[m]||l;return t?r.a.createElement(f,o(o({ref:n},s),{},{components:t})):r.a.createElement(f,o({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=t[s];return r.a.createElement.apply(null,a)}return r.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);