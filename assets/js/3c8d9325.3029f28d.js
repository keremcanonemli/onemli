(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{129:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(8),a=(n(0),n(281)),o={id:"git_fundamentals",title:"Git Fundamentals",sidebar_label:"Git Fundamentals",slug:"git_fundamentals",custom_edit_url:null},c={unversionedId:"python/02_git_github/git_fundamentals",id:"python/02_git_github/git_fundamentals",isDocsHomePage:!1,title:"Git Fundamentals",description:"Git is a distributed version control system (Version Control System, VCS) that is widely used and released under GNU GPL v2 license. It can:",source:"@site/docs/python/02_git_github/1_git_fundamentals.md",slug:"/python/02_git_github/git_fundamentals",permalink:"/docs/python/02_git_github/git_fundamentals",editUrl:null,version:"current",sidebar_label:"Git Fundamentals"},l=[],s={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"  Git is a distributed version control system (Version Control System, VCS) that is widely used and released under GNU GPL v2 license. It can:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"track changes in files;")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"store multiple versions of the same file;")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"cancel changes made;")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"record who made changes and when."),Object(a.b)("p",{parentName:"li"},"Git stores changes as a snapshot of entire repository. This snapshot is created after each \u201ccommit\u201d command."),Object(a.b)("p",{parentName:"li"},"Git installation:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre"},"$ sudo apt-get install git\n")),Object(a.b)("h2",{parentName:"li",id:"git-initial-setup"},"Git initial setup"),Object(a.b)("p",{parentName:"li"},"To start working with Git you need to specify user name and e-mail that will be used to synchronize local repository with Github repository:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre"},'$ git config --global user.name "username"\n$ git config --global user.email "username.user@example.com"\n')),Object(a.b)("p",{parentName:"li"},"See Git settings:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre"},"$ git config --list\n")),Object(a.b)("h2",{parentName:"li",id:"repository-initialization"},"Repository initialization"),Object(a.b)("p",{parentName:"li"},"Repository is initialized using \u201cgit init\u201d command:"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre"},"[~/tools/first_repo]\n$ git init\nInitialized empty Git repository in /home/vagrant/tools/first_repo/.git/\n")),Object(a.b)("p",{parentName:"li"},"After executing this command, current directory creates .git folder containing service files needed for Git."))))}p.isMDXComponent=!0},281:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),p=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(o,".").concat(m)]||u[m]||b[m]||a;return n?i.a.createElement(d,c(c({ref:t},s),{},{components:n})):i.a.createElement(d,c({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);