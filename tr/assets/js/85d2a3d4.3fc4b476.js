(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{189:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var a=t(3),o=t(8),i=(t(0),t(281)),r={id:"method_creation",title:"Method Creation",sidebar_label:"Method Creation",slug:"method_creation",custom_edit_url:null},s={unversionedId:"python/oop_basics/method_creation",id:"python/oop_basics/method_creation",isDocsHomePage:!1,title:"Method Creation",description:"Before we start dealing with class methods, let\u2019s see an example of a function that waits as an argument an instance variable of Switch class and displays information about it using instance variables hostname and model:",source:"@site/docs/python/oop_basics/3_method_creation.md",slug:"/python/oop_basics/method_creation",permalink:"/tr/docs/python/oop_basics/method_creation",editUrl:null,version:"current",sidebar_label:"Method Creation",sidebar:"someSidebar",previous:{title:"Class Creation",permalink:"/tr/docs/python/oop_basics/class_creation"},next:{title:"Parameter Self",permalink:"/tr/docs/python/oop_basics/parameter_self"}},l=[],c={toc:l};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Before we start dealing with class methods, let\u2019s see an example of a function that waits as an argument an instance variable of Switch class and displays information about it using instance variables ",Object(i.b)("inlineCode",{parentName:"p"},"hostname")," and ",Object(i.b)("inlineCode",{parentName:"p"},"model"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [1]: def info(sw_obj):\n   ...:     print(f'Hostname: {sw_obj.hostname}\\nModel: {sw_obj.model}')\n   ...:\n\nIn [2]: sw1 = Switch()\n\nIn [3]: sw1.hostname = 'sw1'\n\nIn [4]: sw1.model = 'Cisco 3850'\n\nIn [5]: info(sw1)\nHostname: sw1\nModel: Cisco 3850\n")),Object(i.b)("p",null,"In ",Object(i.b)("inlineCode",{parentName:"p"},"info")," function, ",Object(i.b)("inlineCode",{parentName:"p"},"sw_obj")," awaits an instance of ",Object(i.b)("inlineCode",{parentName:"p"},"Switch")," class. Most likely, there is nothing new about this example, because in the same way earlier we wrote functions that wait for a string as an argument and then call some methods in this string."),Object(i.b)("p",null,"This example will help you to understand ",Object(i.b)("inlineCode",{parentName:"p"},"info")," method that we will add to Switch class."),Object(i.b)("p",null,"To add a method you have to create a function within class:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [15]: class Switch:\n    ...:     def info(self):\n    ...:         print(f'Hostname: {self.hostname}\\nModel: {self.model}')\n    ...:\n")),Object(i.b)("p",null,"If you look closely, ",Object(i.b)("inlineCode",{parentName:"p"},"info")," method looks exactly like ",Object(i.b)("inlineCode",{parentName:"p"},"info")," function, only instead of ",Object(i.b)("inlineCode",{parentName:"p"},"sw_obj")," name the ",Object(i.b)("inlineCode",{parentName:"p"},"self")," is used. Why there is a strange ",Object(i.b)("inlineCode",{parentName:"p"},"self")," name here will be explained later and in the meantime we will see how to call ",Object(i.b)("inlineCode",{parentName:"p"},"info")," method:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [16]: sw1 = Switch()\n\nIn [17]: sw1.hostname = 'sw1'\n\nIn [18]: sw1.model = 'Cisco 3850'\n\nIn [19]: sw1.info()\nHostname: sw1\nModel: Cisco 3850\n")),Object(i.b)("p",null,"In example above, first an instance of Switch class is created, then ",Object(i.b)("inlineCode",{parentName:"p"},"hostname")," and ",Object(i.b)("inlineCode",{parentName:"p"},"model")," variables are added to instance and then ",Object(i.b)("inlineCode",{parentName:"p"},"info")," method is called. Method ",Object(i.b)("inlineCode",{parentName:"p"},"info")," outputs information about switch using values that are stored in instance variables."),Object(i.b)("p",null,"Method call is different from the function call: we do not pass a link to an instance of ",Object(i.b)("inlineCode",{parentName:"p"},"Switch")," class. We don\u2019t need that because we call method from instance itself. Another unclear thing - why we wrote ",Object(i.b)("inlineCode",{parentName:"p"},"self")," then?"),Object(i.b)("p",null,"Python transforms such a call:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [39]: sw1.info()\nHostname: sw1\nModel: Cisco 3850\n")),Object(i.b)("p",null,"To this one:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [38]: Switch.info(sw1)\nHostname: sw1\nModel: Cisco 3850\n")),Object(i.b)("p",null,"In the second case, ",Object(i.b)("inlineCode",{parentName:"p"},"self")," parameter already makes more sense, it actually accepts the reference to instance and displays information on this basis."),Object(i.b)("p",null,"From objects usage point of view, it is more convenient to call methods using the first syntax version, so it is almost always used."),Object(i.b)("p",null,"Note"),Object(i.b)("p",null,"When a class instance method is called the instance reference is passed by the first argument. In this case, instance is passed implicitly but parameter must be stated explicitly."),Object(i.b)("p",null,"This conversion is not a feature of user classes and works for embedded data types in the same way. For example, standard way to call ",Object(i.b)("inlineCode",{parentName:"p"},"append")," method in the list is:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [4]: a = [1, 2, 3]\n\nIn [5]: a.append(5)\n\nIn [6]: a\nOut[6]: [1, 2, 3, 5]\n")),Object(i.b)("p",null,"The same can be done using the second option, calling through a class:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [7]: a = [1, 2, 3]\n\nIn [8]: list.append(a, 5)\n\nIn [9]: a\nOut[9]: [1, 2, 3, 5]\n")))}p.isMDXComponent=!0},281:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),o=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),p=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},b=function(e){var n=p(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},m=o.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=p(t),m=a,u=b["".concat(r,".").concat(m)]||b[m]||d[m]||i;return t?o.a.createElement(u,s(s({ref:n},c),{},{components:t})):o.a.createElement(u,s({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);