(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{230:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var r=n(3),o=n(8),a=(n(0),n(280)),i={id:"special_methods",title:"Special Methods",sidebar_label:"23.0 Special Methods",slug:"special_methods",custom_edit_url:null},s={unversionedId:"python/oop_special_methods/special_methods",id:"python/oop_special_methods/special_methods",isDocsHomePage:!1,title:"Special Methods",description:"Special methods in Python - methods that are responsible for \u201cstandard\u201d possibilities of objects and are called automatically when these possibilities are used. For example, expression a + b where a and b are numbers that is converted to such a call a.add(b). That is, special method add is responsible for the addition operation. All special methods start and end with double underscore, therefore in English they are often called dunder methods, shortened from \u201cdouble underscore\u201d.",source:"@site/docs/python/oop_special_methods/0_overview.md",slug:"/python/oop_special_methods/special_methods",permalink:"/docs/python/oop_special_methods/special_methods",editUrl:null,version:"current",sidebar_label:"23.0 Special Methods",sidebar:"someSidebar",previous:{title:"Tasks",permalink:"/docs/python/oop_basics/tasks"},next:{title:"Underscore In Names",permalink:"/docs/python/oop_special_methods/underscore_in_names"}},c=[],l={toc:c};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Special methods in Python - methods that are responsible for \u201cstandard\u201d possibilities of objects and are called automatically when these possibilities are used. For example, expression ",Object(a.b)("inlineCode",{parentName:"p"},"a + b")," where a and b are numbers that is converted to such a call ",Object(a.b)("inlineCode",{parentName:"p"},"a.__add__(b)"),". That is, special method ",Object(a.b)("inlineCode",{parentName:"p"},"__add__")," is responsible for the addition operation. All special methods start and end with double underscore, therefore in English they are often called dunder methods, shortened from \u201cdouble underscore\u201d."),Object(a.b)("p",null,"Note"),Object(a.b)("p",null,"Special methods are often called magic methods."),Object(a.b)("p",null,"Special methods are responsible for such features as working in context managers, creating iterators and iterable objects, addition operations, multiplication and others. By adding special methods to objects that are created by user, we make them look like built in Python objects."))}d.isMDXComponent=!0},280:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),d=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,b=p["".concat(i,".").concat(m)]||p[m]||u[m]||a;return n?o.a.createElement(b,s(s({ref:t},l),{},{components:n})):o.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);