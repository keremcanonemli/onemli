(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{280:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),s=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},u=function(e){var n=s(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(t),b=r,d=u["".concat(o,".").concat(b)]||u[b]||m[b]||i;return t?a.a.createElement(d,p(p({ref:n},c),{},{components:t})):a.a.createElement(d,p({ref:n},c))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=b;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},78:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return p})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(8),i=(t(0),t(280)),o={id:"example_of_using_jinja",title:"Example Of Using Jinja",sidebar_label:"20.2 Example Of Using Jinja",slug:"example_of_using_jinja",custom_edit_url:null},p={unversionedId:"python/jinja2/example_of_using_jinja",id:"python/jinja2/example_of_using_jinja",isDocsHomePage:!1,title:"Example Of Using Jinja",description:"Template templates/router_template.txt is a plain text file:",source:"@site/i18n/tr/docusaurus-plugin-content-docs/current/python/jinja2/2_example_of_jinja.md",slug:"/python/jinja2/example_of_using_jinja",permalink:"/tr/docs/python/jinja2/example_of_using_jinja",editUrl:null,version:"current",sidebar_label:"20.2 Example Of Using Jinja",sidebar:"someSidebar",previous:{title:"Getting Started With Jinja2",permalink:"/tr/docs/python/jinja2/getting_started_with_jinja2"},next:{title:"Jinja2 Template Syntax",permalink:"/tr/docs/python/jinja2/jinja2_template_syntax"}},l=[],c={toc:l};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Template templates/router_template.txt is a plain text file:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"hostname {{name}}\n!\ninterface Loopback10\n description MPLS loopback\n ip address 10.10.{{id}}.1 255.255.255.255\n !\ninterface GigabitEthernet0/0\n description WAN to {{name}} sw1 G0/1\n!\ninterface GigabitEthernet0/0.1{{id}}1\n description MPLS to {{to_name}}\n encapsulation dot1Q 1{{id}}1\n ip address 10.{{id}}.1.2 255.255.255.252\n ip ospf network point-to-point\n ip ospf hello-interval 1\n ip ospf cost 10\n!\ninterface GigabitEthernet0/1\n description LAN {{name}} to sw1 G0/2 !\ninterface GigabitEthernet0/1.{{IT}}\n description PW IT {{name}} - {{to_name}}\n encapsulation dot1Q {{IT}}\n xconnect 10.10.{{to_id}}.1 {{id}}11 encapsulation mpls\n backup peer 10.10.{{to_id}}.2 {{id}}21\n  backup delay 1 1\n!\ninterface GigabitEthernet0/1.{{BS}}\n description PW BS {{name}} - {{to_name}}\n encapsulation dot1Q {{BS}}\n xconnect 10.10.{{to_id}}.1 {{to_id}}{{id}}11 encapsulation mpls\n  backup peer 10.10.{{to_id}}.2 {{to_id}}{{id}}21\n  backup delay 1 1\n!\nrouter ospf 10\n router-id 10.10.{{id}}.1\n auto-cost reference-bandwidth 10000\n network 10.0.0.0 0.255.255.255 area 0\n !\n")),Object(i.b)("p",null,"Data file routers_info.yml"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"- id: 11\n  name: Liverpool\n  to_name: LONDON\n  IT: 791\n  BS: 1550\n  to_id: 1\n\n- id: 12\n  name: Bristol\n  to_name: LONDON\n  IT: 793\n  BS: 1510\n  to_id: 1\n\n- id: 14\n  name: Coventry\n  to_name: Manchester\n  IT: 892\n  BS: 1650\n  to_id: 2\n")),Object(i.b)("p",null,"Script to generate configurations router_config_generator_ver2.py"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"from jinja2 import Environment, FileSystemLoader\nimport yaml\n\nenv = Environment(loader=FileSystemLoader('templates'))\ntemplate = env.get_template('router_template.txt')\n\nwith open('routers_info.yml') as f:\n    routers = yaml.safe_load(f)\n\nfor router in routers:\n    r1_conf = router['name'] + '_r1.txt'\n    with open(r1_conf, 'w') as f:\n        f.write(template.render(router))\n")),Object(i.b)("p",null,"File router_config_generator.py imports from jinja2 module:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},"FileSystemLoader\n")))),Object(i.b)("p",null,"  ","-"," a loader that allows working with a file system"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"path to directory where templates are located is specified here")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"in this case template is in templates directory")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},Object(i.b)("inlineCode",{parentName:"p"},"Environment")," - a class for describing environment parameters. In this"),Object(i.b)("p",{parentName:"li"},"case only loader is specified, but you can specify how to process a template"))))),Object(i.b)("p",null,"Note that template is now in ",Object(i.b)("inlineCode",{parentName:"p"},"templates")," directory."))}s.isMDXComponent=!0}}]);