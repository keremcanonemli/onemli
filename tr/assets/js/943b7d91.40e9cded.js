(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{200:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(8),i=(n(0),n(280)),o={id:"tasks",title:"Tasks",sidebar_label:"7.8 Tasks",slug:"tasks",custom_edit_url:null},s={unversionedId:"python/files/tasks",id:"python/files/tasks",isDocsHomePage:!1,title:"Tasks",description:"All tasks and additional files can be downloaded from repository.",source:"@site/i18n/tr/docusaurus-plugin-content-docs/current/python/files/8_tasks.md",slug:"/python/files/tasks",permalink:"/tr/docs/python/files/tasks",editUrl:null,version:"current",sidebar_label:"7.8 Tasks",sidebar:"someSidebar",previous:{title:"Further Reading",permalink:"/tr/docs/python/files/further_reading"},next:{title:"Python Basic Examples",permalink:"/tr/docs/python/python_basic_examples/python_basic_examples"}},c=[{value:"Task 7.1",id:"task-71",children:[]},{value:"Task 7.2",id:"task-72",children:[]},{value:"Task 7.2a",id:"task-72a",children:[]},{value:"Task 7.2b",id:"task-72b",children:[]},{value:"Task 7.3",id:"task-73",children:[]},{value:"Task 7.3a",id:"task-73a",children:[]},{value:"Task 7.3b",id:"task-73b",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"All tasks and additional files can be downloaded from ",Object(i.b)("a",{parentName:"p",href:"https://github.com/natenka/pyneng-examples-exercises-en/"},"repository"),"."),Object(i.b)("p",null,"Warning"),Object(i.b)("p",null,"Starting from section \u201c4. Data types in Python\u201d there are automated tests for testing tasks. They help to check whether everything matches the task, and also give feedback on what does not correspond to the task. As a rule, after the first period of adaptation to tests, it becomes easier to do tasks with tests. Testing is done using the pyneng utility. ",Object(i.b)("a",{parentName:"p",href:"https://pyneng.readthedocs.io/en/latest/book/additional_info/pyneng.html#additional-info-pyneng"},"Learn more about how to work with the pyneng utility"),"."),Object(i.b)("h2",{id:"task-71"},"Task 7.1"),Object(i.b)("p",null,"Process the lines from the ospf.txt file and print information for each line in this form to the stdout:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Prefix                10.0.24.0/24\nAD/Metric             110/41\nNext-Hop              10.0.13.3\nLast update           3d18h\nOutbound Interface    FastEthernet0/0\n")),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."),Object(i.b)("h2",{id:"task-72"},"Task 7.2"),Object(i.b)("p",null,"Create a script that will process the config_sw1.txt configuration file. The filename is passed as an argument to the script."),Object(i.b)("p",null,"The script should return to the stdout commands from the passed configuration file, excluding lines that start with \u2018!\u2019."),Object(i.b)("p",null,"There should be no blank lines in the output."),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."),Object(i.b)("p",null,"Output example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"$ python task_7_2.py config_sw1.txt\nCurrent configuration : 2033 bytes\nversion 15.0\nservice timestamps debug datetime msec\nservice timestamps log datetime msec\nno service password-encryption\nhostname sw1\ninterface Ethernet0/0\n duplex auto\ninterface Ethernet0/1\n switchport trunk encapsulation dot1q\n switchport trunk allowed vlan 100\n switchport mode trunk\n duplex auto\n spanning-tree portfast edge trunk\ninterface Ethernet0/2\n duplex auto\ninterface Ethernet0/3\n switchport trunk encapsulation dot1q\n switchport trunk allowed vlan 100\n duplex auto\n switchport mode trunk\n spanning-tree portfast edge trunk\n...\n")),Object(i.b)("h2",{id:"task-72a"},"Task 7.2a"),Object(i.b)("p",null,"Make a copy of the code from the task 7.2."),Object(i.b)("p",null,"Add this functionality: The script should not print to the stdout commands, which contain words from the ignore list. The script should also not print lines that begin with !."),Object(i.b)("p",null,"Check the script on the config_sw1.txt configuration file. The filename is passed as an argument to the script."),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'ignore = ["duplex", "alias", "Current configuration"]\n')),Object(i.b)("h2",{id:"task-72b"},"Task 7.2b"),Object(i.b)("p",null,"Make a copy of the code from the task 7.2a. Add this functionality: instead of printing to stdout, the script should write the resulting lines to a file."),Object(i.b)("p",null,"File names must be passed as arguments to the script:"),Object(i.b)("blockquote",null,Object(i.b)("ol",{parentName:"blockquote"},Object(i.b)("li",{parentName:"ol"},"name of the source configuration file"),Object(i.b)("li",{parentName:"ol"},"name of the destination configuration file"))),Object(i.b)("p",null,"In this case, the lines that are contained in the ignore list and lines that start with ! must be filtered."),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'ignore = ["duplex", "alias", "Current configuration"]\n')),Object(i.b)("h2",{id:"task-73"},"Task 7.3"),Object(i.b)("p",null,"The script should process the lines in the CAM_table.txt file. Each line, where there is a MAC address, must be handled in such a way that the following table was printed on the stdout:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"100    01bb.c580.7000   Gi0/1\n200    0a4b.c380.7000   Gi0/2\n300    a2ab.c5a0.7000   Gi0/3\n100    0a1b.1c80.7000   Gi0/4\n500    02b1.3c80.7000   Gi0/5\n200    1a4b.c580.7000   Gi0/6\n300    0a1b.5c80.7000   Gi0/7\n")),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."),Object(i.b)("h2",{id:"task-73a"},"Task 7.3a"),Object(i.b)("p",null,"Make a copy of the code from the task 7.3."),Object(i.b)("p",null,"Add this functionality: Sort output by VLAN number"),Object(i.b)("p",null,"As a result, you should get the following output:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"10       01ab.c5d0.70d0      Gi0/8\n10       0a1b.1c80.7000      Gi0/4\n100      01bb.c580.7000      Gi0/1\n200      0a4b.c380.7c00      Gi0/2\n200      1a4b.c580.7000      Gi0/6\n300      0a1b.5c80.70f0      Gi0/7\n300      a2ab.c5a0.700e      Gi0/3\n500      02b1.3c80.7b00      Gi0/5\n1000     0a4b.c380.7d00      Gi0/9\n")),Object(i.b)("p",null,"Pay attention to vlan 1000 - it should be displayed last. Correct sorting can be achieved if vlan is a number, not a string."),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."),Object(i.b)("h2",{id:"task-73b"},"Task 7.3b"),Object(i.b)("p",null,"Make a copy of the code from the task 7.3a."),Object(i.b)("p",null,"Add this functionality:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Ask the user to enter the VLAN number."),Object(i.b)("li",{parentName:"ul"},"Print information only for the specified VLAN.")),Object(i.b)("p",null,"Output example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Enter VLAN number: 10\n10       0a1b.1c80.7000      Gi0/4\n10       01ab.c5d0.70d0      Gi0/8\n")),Object(i.b)("p",null,"Restriction: All tasks must be done using the topics covered in this and previous chapters."))}u.isMDXComponent=!0},280:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,h=p["".concat(o,".").concat(d)]||p[d]||b[d]||i;return n?r.a.createElement(h,s(s({ref:t},l),{},{components:n})):r.a.createElement(h,s({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);