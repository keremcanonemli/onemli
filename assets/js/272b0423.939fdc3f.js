(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{122:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var o=t(0),r=t.n(o);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=r.a.createContext({}),p=function(e){var n=r.a.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(m.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},s=r.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(t),s=o,b=u["".concat(i,".").concat(s)]||u[s]||d[s]||c;return t?r.a.createElement(b,a(a({ref:n},m),{},{components:t})):r.a.createElement(b,a({ref:n},m))}));function b(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var c=t.length,i=new Array(c);i[0]=s;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var m=2;m<c;m++)i[m]=t[m];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},84:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var o=t(3),r=t(8),c=(t(0),t(122)),i={id:"netmiko_check_config_mode",title:"\u2699\ufe0f check_config_mode()",sidebar_label:"\u2699\ufe0f check_config_mode()",slug:"netmiko_check_config_mode_method",custom_edit_url:null},a={unversionedId:"netmiko/methods/netmiko_check_config_mode",id:"netmiko/methods/netmiko_check_config_mode",isDocsHomePage:!1,title:"\u2699\ufe0f check_config_mode()",description:"`python",source:"@site/docs/netmiko/methods/5_netmiko_check_config_mode.md",slug:"/netmiko/methods/netmiko_check_config_mode_method",permalink:"/docs/netmiko/methods/netmiko_check_config_mode_method",editUrl:null,version:"current",sidebar_label:"\u2699\ufe0f check_config_mode()",sidebar:"someSidebar",previous:{title:"\u2699\ufe0f config_mode()",permalink:"/docs/netmiko/methods/netmiko_config_mode_method"},next:{title:"\u2699\ufe0f exit_config_mode()",permalink:"/docs/netmiko/methods/netmiko_exit_config_mode_method"}},l=[{value:"Example",id:"example",children:[]}],m={toc:l};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(o.a)({},m,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},'from netmiko import ConnectHandler\ndevice = {\n    "device_type":"cisco_ios",\n    "host":"192.168.10.12",\n    "username":"keremcan",\n    "password":"onemli",\n    "verbose":"True",\n    "secret":"onemli"}\n')),Object(c.b)("p",null,"\u200b    "),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"with ConnectHandler(**device) as connection:\n    print(connection.check_config_mode())\n")),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"SSH connection established to 192.168.10.12:22\nInteractive SSH session established\nFalse\n")),Object(c.b)("p",null,"\u200b    "),Object(c.b)("p",null,"Use ",Object(c.b)("inlineCode",{parentName:"p"},"config_mode")," to enter configuration mode than re-check:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"with ConnectHandler(**device) as connection:\n    print(connection.check_config_mode()) # return value: False\n    connection.config_mode()\n    print(connection.check_config_mode()) # return value: True\n")),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"SSH connection established to 192.168.10.12:22\nInteractive SSH session established\nFalse\nTrue\n")))}p.isMDXComponent=!0}}]);