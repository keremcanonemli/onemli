(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{184:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var o=n(3),i=n(8),r=(n(0),n(281)),a={id:"working_with_own_repository",title:"Working With Own Repository",sidebar_label:"Working With Own Repository",slug:"working_with_own_repository",custom_edit_url:null},l={unversionedId:"python/02_git_github/working_with_own_repository",id:"python/02_git_github/working_with_own_repository",isDocsHomePage:!1,title:"Working With Own Repository",description:"This chapter covers how to work with repository on your local machine.",source:"@site/docs/python/02_git_github/6_working_with_own_repo.md",slug:"/python/02_git_github/working_with_own_repository",permalink:"/docs/python/02_git_github/working_with_own_repository",editUrl:null,version:"current",sidebar_label:"Working With Own Repository",sidebar:"someSidebar",previous:{title:"Github Authentication",permalink:"/docs/python/02_git_github/github_authentication"},next:{title:"Working With Repository Of Tasks And Examples",permalink:"/docs/python/02_git_github/working_with_repository_of_tasks_and_examples"}},c=[{value:"Creating a Github repository",id:"creating-a-github-repository",children:[]},{value:"Cloning a Github repository",id:"cloning-a-github-repository",children:[]},{value:"Working with repository",id:"working-with-repository",children:[]},{value:"Synchronizing local repository with remote repository",id:"synchronizing-local-repository-with-remote-repository",children:[]},{value:"Adding new files or changes to existing files",id:"adding-new-files-or-changes-to-existing-files",children:[]},{value:"Commit",id:"commit",children:[]},{value:"Push on GitHub",id:"push-on-github",children:[]}],s={toc:c};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This chapter covers how to work with repository on your local machine."),Object(r.b)("h2",{id:"creating-a-github-repository"},"Creating a Github repository"),Object(r.b)("p",null,"To create a Github repository you need:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"log in to ",Object(r.b)("a",{parentName:"li",href:"https://github.com/"},"GitHub")),Object(r.b)("li",{parentName:"ul"},"In upper right corner press plus and select \u201cNew repository\u201d to create a new repository"),Object(r.b)("li",{parentName:"ul"},"Name of repository should be entered in window that appears")),Object(r.b)("p",null,"You can put \u201cInitialize this repository with a README\u201d. This will create a README.md file that only contains repository name."),Object(r.b)("p",null,Object(r.b)("img",{parentName:"p",src:"https://raw.githubusercontent.com/natenka/PyNEng/master/images/git/github_new_repo.png",alt:"https://raw.githubusercontent.com/natenka/PyNEng/master/images/git/github_new_repo.png"})),Object(r.b)("h2",{id:"cloning-a-github-repository"},"Cloning a Github repository"),Object(r.b)("p",null,"To work locally with repository, it should be cloned."),Object(r.b)("p",null,"Use ",Object(r.b)("inlineCode",{parentName:"p"},"git clone")," command to clone repository:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"$ git clone ssh://git@github.com/pyneng/online-2-natasha-samoylenko.git\nCloning into 'online-2-natasha-samoylenko'...\nremote: Counting objects: 241, done.\nremote: Compressing objects: 100% (191/191), done.\nremote: Total 241 (delta 43), reused 239 (delta 41), pack-reused 0\nReceiving objects: 100% (241/241), 119.60 KiB | 0 bytes/s, done.\nResolving deltas: 100% (43/43), done.\nChecking connectivity... done.\n")),Object(r.b)("p",null,"Compared to this command, you need to change:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"pyneng user name")," for your Github user name"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"online-2-natasha-samoylenko")," repository name for your Github repository")),Object(r.b)("p",null,"As a result, in current directory in which ",Object(r.b)("inlineCode",{parentName:"p"},"git clone")," was executed, a directory with name of repository will appear, in my case - \u201conline-2-natasha-samoylenko\u201d. This directory now contains the contents of Github repository."),Object(r.b)("h2",{id:"working-with-repository"},"Working with repository"),Object(r.b)("p",null,"The previous command not only copied repository to use it locally, but also configured Git accordingly:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Folder .git was created"),Object(r.b)("li",{parentName:"ul"},"All repository data is downloaded"),Object(r.b)("li",{parentName:"ul"},"Downloaded all changes that were in repository"),Object(r.b)("li",{parentName:"ul"},"Github repository is configured as a remote for local repository")),Object(r.b)("p",null,"Now you have a complete local Git repository where you can work. Typically, sequence of steps will be as follows:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Before starting, synchronize local content with Github using ",Object(r.b)("inlineCode",{parentName:"li"},"git pull")," command"),Object(r.b)("li",{parentName:"ul"},"Modifying repository files"),Object(r.b)("li",{parentName:"ul"},"Adding modified files to staging with \u201cgit add\u201d command"),Object(r.b)("li",{parentName:"ul"},"Commit changes using ",Object(r.b)("inlineCode",{parentName:"li"},"git commit")," command"),Object(r.b)("li",{parentName:"ul"},"Transferring local changes to Github repository with ",Object(r.b)("inlineCode",{parentName:"li"},"git push")," command")),Object(r.b)("p",null,"When working with tasks at work and at home, it is necessary to pay special attention to first and last step:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The first step is to update local repository"),Object(r.b)("li",{parentName:"ul"},"The last step - load changes to Github")),Object(r.b)("h2",{id:"synchronizing-local-repository-with-remote-repository"},"Synchronizing local repository with remote repository"),Object(r.b)("p",null,"All commands are executed inside repository directory (in example above - online-2-natasha-samoylenko)."),Object(r.b)("p",null,"If contents of local repository are the same as those of remote repository, output will be:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"$ git pull\nAlready up-to-date.\n")),Object(r.b)("p",null,"If there were changes, output would be something like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"$ git pull\nremote: Counting objects: 5, done.\nremote: Compressing objects: 100% (1/1), done.\nremote: Total 5 (delta 4), reused 5 (delta 4), pack-reused 0\nUnpacking objects: 100% (5/5), done.\nFrom ssh://github.com/pyneng/online-2-natasha-samoylenko\n   89c04b6..fc4c721  master     -> origin/master\nUpdating 89c04b6..fc4c721\nFast-forward\n exercises/03_data_structures/task_3_3.py | 2 ++\n 1 file changed, 2 insertions(+)\n")),Object(r.b)("h2",{id:"adding-new-files-or-changes-to-existing-files"},"Adding new files or changes to existing files"),Object(r.b)("p",null,"If you want to add a specific file (in this case, README.md), you need to enter ",Object(r.b)("inlineCode",{parentName:"p"},"git add README.md")," command. All files of current directory are added by ",Object(r.b)("inlineCode",{parentName:"p"},"git add .")," command."),Object(r.b)("h2",{id:"commit"},"Commit"),Object(r.b)("p",null,"You should specify message when you are running a commit. It is better if message is with meaning, rather than just \u201cupdate\u201d or similar. Commit could be done by a command similar to ",Object(r.b)("inlineCode",{parentName:"p"},'git commit -m "Tasks 4.1-4.3 are completed"'),"."),Object(r.b)("h2",{id:"push-on-github"},"Push on GitHub"),Object(r.b)("p",null,"Command \u201cgit push\u201d is used to load all local changes to Github:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"$ git push origin master\nCounting objects: 5, done.\nCompressing objects: 100% (5/5), done.\nWriting objects: 100% (5/5), 426 bytes | 0 bytes/s, done.\nTotal 5 (delta 4), reused 0 (delta 0)\nremote: Resolving deltas: 100% (4/4), completed with 4 local objects.\nTo ssh://git@github.com/pyneng/online-2-natasha-samoylenko.git\n   fc4c721..edcf417  master -> master\n")),Object(r.b)("p",null,"Before executing ",Object(r.b)("inlineCode",{parentName:"p"},"git push")," you can run ",Object(r.b)("inlineCode",{parentName:"p"},"git log -p/origin..")," - it will show what changes you are going to add to your repository on Github."))}p.isMDXComponent=!0},281:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var o=n(0),i=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=i.a.createContext({}),p=function(e){var t=i.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,h=u["".concat(a,".").concat(d)]||u[d]||b[d]||r;return n?i.a.createElement(h,l(l({ref:t},s),{},{components:n})):i.a.createElement(h,l({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<r;s++)a[s]=n[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);