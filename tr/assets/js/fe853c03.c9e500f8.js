(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{276:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(3),o=t(8),i=(t(0),t(280)),s={id:"ipython_special_commands",title:"Ipython Special Commands",sidebar_label:"3.3 Ipython Special Commands",slug:"ipython_special_commands",custom_edit_url:null},a={unversionedId:"python/start/ipython_special_commands",id:"python/start/ipython_special_commands",isDocsHomePage:!1,title:"Ipython Special Commands",description:"IPython has special commands that make work with interpreter easier. All of them are started with percent sign.",source:"@site/i18n/tr/docusaurus-plugin-content-docs/current/python/start/3_ipython_special_commands.md",slug:"/python/start/ipython_special_commands",permalink:"/tr/docs/python/start/ipython_special_commands",editUrl:null,version:"current",sidebar_label:"3.3 Ipython Special Commands",sidebar:"someSidebar",previous:{title:"Python Interpreter. Ipython",permalink:"/tr/docs/python/start/python_interpreter._ipython"},next:{title:"Variables",permalink:"/tr/docs/python/start/variables"}},c=[{value:"%history",id:"history",children:[]},{value:"%time",id:"time",children:[]}],l={toc:c};function p(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"IPython has special commands that make work with interpreter easier. All of them are started with percent sign."),Object(i.b)("h2",{id:"history"},"%history"),Object(i.b)("p",null,"For example, ",Object(i.b)("inlineCode",{parentName:"p"},"%history")," command allows to look at history of commands entered by user in current IPython session."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'In [1]: a = 10\n\nIn [2]: b = 5\n\nIn [3]: if a > b:\n   ...:     print("A is bigger")\n   ...:\nA is bigger\n\nIn [4]: %history\na = 10\nb = 5\nif a > b:\n    print("A is bigger")\n%history\n')),Object(i.b)("p",null,"With ",Object(i.b)("inlineCode",{parentName:"p"},"%history")," you can copy needed block of code."),Object(i.b)("h2",{id:"time"},"%time"),Object(i.b)("p",null,"Command ",Object(i.b)("inlineCode",{parentName:"p"},"%time")," shows how many seconds it took to execute expression."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [5]: import subprocess\n\ndef ping_ip(ip_address):\n    reply = subprocess.run(['ping', '-c', '3', '-n', ip_address],\n                           stdout=subprocess.PIPE,\n                           stderr=subprocess.PIPE,\n                           encoding='utf-8')\n    if reply.returncode == 0:\n        return True\n    else:\n        return False\n\n\nIn [7]: %time ping_ip('8.8.8.8')\nCPU times: user 0 ns, sys: 4 ms, total: 4 ms\nWall time: 2.03 s\nOut[7]: True\n\nIn [8]: %time ping_ip('8.8.8')\nCPU times: user 0 ns, sys: 8 ms, total: 8 ms\nWall time: 12 s\nOut[8]: False\n\nIn [9]: items = [1, 3, 5, 7, 9, 1, 2, 3, 55, 77, 33]\n\nIn [10]: %time sorted(items)\nCPU times: user 0 ns, sys: 0 ns, total: 0 ns\nWall time: 8.11 \xb5s\nOut[10]: [1, 1, 2, 3, 3, 5, 7, 9, 33, 55, 77]\n")),Object(i.b)("p",null,"More about IPython you can find in IPython ",Object(i.b)("a",{parentName:"p",href:"http://ipython.readthedocs.io/en/stable/index.html"},"documentation"),"."),Object(i.b)("p",null,"Briefly, information can be viewed in IPython via %quickref command:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"IPython -- An enhanced Interactive Python - Quick Reference Card\n===========================================================\n\nobj?, obj??      : Get help, or more help for object (also works as\n                   ?obj, ??obj).\n?foo.*abc*       : List names in 'foo' containing 'abc' in them.\n%magic           : Information about IPython's 'magic' % functions.\n\nMagic functions are prefixed by % or %%, and typically take their arguments\nwithout brackets, quotes or even commas for convenience.  Line magics take a\nsingle % and cell magics are prefixed with two %%.\n\nExample magic function calls:\n\n%alias d ls -F   : 'd' is now an alias for 'ls -F'\nalias d ls -F    : Works if 'alias' not a python name\nalist = %alias   : Get list of aliases to 'alist'\ncd /usr/share    : Obvious. cd -<tab> to choose from visited dirs.\n%cd??            : See help AND source for magic %cd\n%timeit x=10     : time 'x=10' statement with high precision.\n%%timeit x=2**100\nx**100           : time 'x**100' with a setup of 'x=2**100'; setup code is not\n                   counted.  This is an example of a cell magic.\n\nSystem commands:\n\n!cp a.txt b/     : System command escape, calls os.system()\ncp a.txt b/      : after %rehashx, most system commands work without !\ncp ${f}.txt $bar : Variable expansion in magics and system commands\nfiles = !ls /usr : Capture sytem command output\nfiles.s, files.l, files.n: \"a b c\", ['a','b','c'], 'a\\nb\\nc'\n\nHistory:\n\n_i, _ii, _iii    : Previous, next previous, next next previous input\n_i4, _ih[2:5]    : Input history line 4, lines 2-4\nexec _i81        : Execute input history line #81 again\n%rep 81          : Edit input history line #81\n_, __, ___       : previous, next previous, next next previous output\n_dh              : Directory history\n_oh              : Output history\n%hist            : Command history of current session.\n%hist -g foo     : Search command history of (almost) all sessions for 'foo'.\n%hist -g         : Command history of (almost) all sessions.\n%hist 1/2-8      : Command history containing lines 2-8 of session 1.\n%hist 1/ ~2/     : Command history of session 1 and 2 sessions before current.\n")))}p.isMDXComponent=!0},280:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return h}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return t?o.a.createElement(h,a(a({ref:n},l),{},{components:t})):o.a.createElement(h,a({ref:n},l))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<i;l++)s[l]=t[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);