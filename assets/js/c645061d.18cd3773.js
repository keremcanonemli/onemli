(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{244:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return f}));var a=t(3),r=t(8),i=(t(0),t(281)),s={id:"parameter_self",title:"Parameter Self",sidebar_label:"Parameter Self",slug:"parameter_self",custom_edit_url:null},o={unversionedId:"python/oop_basics/parameter_self",id:"python/oop_basics/parameter_self",isDocsHomePage:!1,title:"Parameter Self",description:"Parameter self was specified before in method definition, as well as when using instance variables in method. Parameter self is a reference to a particular instance of class. Parameter self is not a special name but an arrangement. Instead of self you can use a different name but you shouldn\u2019t do that.",source:"@site/docs/python/oop_basics/4_parameter_self.md",slug:"/python/oop_basics/parameter_self",permalink:"/docs/python/oop_basics/parameter_self",editUrl:null,version:"current",sidebar_label:"Parameter Self",sidebar:"someSidebar",previous:{title:"Method Creation",permalink:"/docs/python/oop_basics/method_creation"},next:{title:"Method `__Init__`",permalink:"/docs/python/oop_basics/method_init"}},l=[],c={toc:l};function f(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Parameter ",Object(i.b)("inlineCode",{parentName:"p"},"self")," was specified before in method definition, as well as when using instance variables in method. Parameter ",Object(i.b)("inlineCode",{parentName:"p"},"self")," is a reference to a particular instance of class. Parameter ",Object(i.b)("inlineCode",{parentName:"p"},"self")," is not a special name but an arrangement. Instead of ",Object(i.b)("inlineCode",{parentName:"p"},"self")," you can use a different name but you shouldn\u2019t do that."),Object(i.b)("p",null,"Example of using a different name instead of ",Object(i.b)("inlineCode",{parentName:"p"},"self"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [15]: class Switch:\n    ...:     def info(sw_object):\n    ...:         print(f'Hostname: {sw_object.hostname}\\nModel: {sw_object.model}')\n    ...:\n")),Object(i.b)("p",null,"It will work the same way:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [16]: sw1 = Switch()\n\nIn [17]: sw1.hostname = 'sw1'\n\nIn [18]: sw1.model = 'Cisco 3850'\n\nIn [19]: sw1.info()\nHostname: sw1\nModel: Cisco 3850\n")),Object(i.b)("p",null,"Warning"),Object(i.b)("p",null,"Although technically you can use another name but always use ",Object(i.b)("inlineCode",{parentName:"p"},"self"),"."),Object(i.b)("p",null,"In all \u201cusual\u201d methods of class the first parameter will always be ",Object(i.b)("inlineCode",{parentName:"p"},"self"),". Furthermore, creating an instance variable within a class is also done via ",Object(i.b)("inlineCode",{parentName:"p"},"self"),"."),Object(i.b)("p",null,"An example of Switch class with new generate_interfaces method: generate_interfaces method must generate a list with interfaces based on specified type and quantity and create variable in an instance of class. First, an option of creating a usual variable within method:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [5]: class Switch:\n   ...:     def generate_interfaces(self, intf_type, number_of_intf):\n   ...:         interfaces = [f'{intf_type}{number}' for number in range(1, number_of_intf+1)]\n   ...:\n")),Object(i.b)("p",null,"In this case, class instances will not have interfaces variable:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [6]: sw1 = Switch()\n\nIn [7]: sw1.generate_interfaces('Fa', 10)\n\nIn [8]: sw1.interfaces\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-8-e6b457e4e23e> in <module>()\n----\x3e 1 sw1.interfaces\n\nAttributeError: 'Switch' object has no attribute 'interfaces'\n")),Object(i.b)("p",null,"This variable does not exist because it exists only within method and visibility area of method is the same as function. Even other methods of the same class do not see variables in other methods."),Object(i.b)("p",null,"For list with interfaces to be available as a variable in instances, you have to assign value in self.interfaces:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [9]: class Switch:\n   ...:     def info(self):\n   ...:         print(f'Hostname: {self.hostname}\\nModel: {self.model}')\n   ...:\n   ...:     def generate_interfaces(self, intf_type, number_of_intf):\n   ...:         interfaces = [f'{intf_type}{number}' for number in range(1, number_of_intf + 1)]\n   ...:         self.interfaces = interfaces\n   ...:\n")),Object(i.b)("p",null,"Now, after generate_interfaces method is called interfaces variable is created in instance:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"In [10]: sw1 = Switch()\n\nIn [11]: sw1.generate_interfaces('Fa', 10)\n\nIn [12]: sw1.interfaces\nOut[12]: ['Fa1', 'Fa2', 'Fa3', 'Fa4', 'Fa5', 'Fa6', 'Fa7', 'Fa8', 'Fa9', 'Fa10']\n")))}f.isMDXComponent=!0},281:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),f=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=f(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=f(t),u=a,m=p["".concat(s,".").concat(u)]||p[u]||b[u]||i;return t?r.a.createElement(m,o(o({ref:n},c),{},{components:t})):r.a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var c=2;c<i;c++)s[c]=t[c];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);