(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{280:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return O}));var r=t(0),a=t.n(r);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),i=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=i(e.components);return a.a.createElement(b.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,b=p(e,["components","mdxType","originalType","parentName"]),u=i(t),d=r,O=u["".concat(l,".").concat(d)]||u[d]||s[d]||c;return t?a.a.createElement(O,o(o({ref:n},b),{},{components:t})):a.a.createElement(O,o({ref:n},b))}));function O(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,l=new Array(c);l[0]=d;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var b=2;b<c;b++)l[b]=t[b];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},72:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return i}));var r=t(3),a=t(8),c=(t(0),t(280)),l={id:"types_conversion",title:"Types Conversion",sidebar_label:"4.8 Types Conversion",slug:"types_conversion",custom_edit_url:null},o={unversionedId:"python/data_structures/types_conversion",id:"python/data_structures/types_conversion",isDocsHomePage:!1,title:"Types Conversion",description:"Python has several useful built-in features that allow data to be converted from one type to another.",source:"@site/docs/python/data_structures/8_types_conversion.md",slug:"/python/data_structures/types_conversion",permalink:"/docs/python/data_structures/types_conversion",editUrl:null,version:"current",sidebar_label:"4.8 Types Conversion",sidebar:"someSidebar",previous:{title:"Boolean Values",permalink:"/docs/python/data_structures/boolean_values"},next:{title:"Types Checking",permalink:"/docs/python/data_structures/types_checking"}},p=[{value:"<code>int</code>",id:"int",children:[]},{value:"<code>bin</code>",id:"bin",children:[]},{value:"<code>hex</code>",id:"hex",children:[]},{value:"<code>list</code>",id:"list",children:[]},{value:"<code>set</code>",id:"set",children:[]},{value:"<code>tuple</code>",id:"tuple",children:[]},{value:"<code>str</code>",id:"str",children:[]}],b={toc:p};function i(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Python has several useful built-in features that allow data to be converted from one type to another."),Object(c.b)("h2",{id:"int"},Object(c.b)("inlineCode",{parentName:"h2"},"int")),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"int")," converts a string to int:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},'print(int("10"))\n')),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"10\n")),Object(c.b)("p",null,"Using ",Object(c.b)("inlineCode",{parentName:"p"},"int")," function you can convert a binary number into a decimal number (",Object(c.b)("u",null,"binary number must be written as a string"),")"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},'print(int("11111111", 2))\n')),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"255\n")),Object(c.b)("h2",{id:"bin"},Object(c.b)("inlineCode",{parentName:"h2"},"bin")),Object(c.b)("p",null,"You can convert a decimal number to binary format with ",Object(c.b)("inlineCode",{parentName:"p"},"bin"),":"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"print(bin(10))\n\nprint(bin(255))\n")),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"0b1010\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"0b11111111\n")),Object(c.b)("h2",{id:"hex"},Object(c.b)("inlineCode",{parentName:"h2"},"hex")),Object(c.b)("p",null,"A similar function exists for conversion to hexadecimal format:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"print(hex(10))\n\nprint(hex(255))\n\n")),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"0xa\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"0xff\n")),Object(c.b)("h2",{id:"list"},Object(c.b)("inlineCode",{parentName:"h2"},"list")),Object(c.b)("p",null,"Function ",Object(c.b)("inlineCode",{parentName:"p"},"list")," converts an argument to a list:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},'print(list("string"))\n\nprint(list({1, 2, 3}))\n\nprint(list((1, 2, 3, 4)))\n\n')),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"['s', 't', 'r', 'i', 'n', 'g']\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"[1, 2, 3]\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"[1, 2, 3, 4]\n")),Object(c.b)("h2",{id:"set"},Object(c.b)("inlineCode",{parentName:"h2"},"set")),Object(c.b)("p",null,"Function ",Object(c.b)("inlineCode",{parentName:"p"},"set")," converts an argument into a set:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},'print(set([1, 2, 3, 3, 4, 4, 4, 4]))\n\nprint(set((1, 2, 3, 3, 4, 4, 4, 4)))\n\nprint(set("string string"))\n\n')),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"{1, 2, 3, 4}\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"{1, 2, 3, 4}\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"{'g', 'n', 's', 'i', ' ', 'r', 't'}\n")),Object(c.b)("p",null,"This function is very useful when you need to get unique elements in a sequence."),Object(c.b)("h2",{id:"tuple"},Object(c.b)("inlineCode",{parentName:"h2"},"tuple")),Object(c.b)("p",null,"Function ",Object(c.b)("inlineCode",{parentName:"p"},"tuple")," converts argument into a tuple:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},'print(tuple([1, 2, 3, 4]))\n\nprint(tuple({1, 2, 3, 4}))\n\nprint(tuple("string"))\n')),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"(1, 2, 3, 4)\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"(1, 2, 3, 4)\n")),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"('s', 't', 'r', 'i', 'n', 'g')\n")),Object(c.b)("p",null,"This can be useful if you want an immutable object."),Object(c.b)("h2",{id:"str"},Object(c.b)("inlineCode",{parentName:"h2"},"str")),Object(c.b)("p",null,"Function ",Object(c.b)("inlineCode",{parentName:"p"},"str")," converts an argument into a string:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"print(str(10))\n")),Object(c.b)("p",null,"Output"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-python"},"10\n")))}i.isMDXComponent=!0}}]);