(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{87:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return c}));var r=n(3),a=n(8),i=(n(0),n(94)),p={id:"nt11",title:"strip_prompt()",sidebar_label:"~ strip_prompt()",slug:"/netmiko_strip_prompt_method",custom_edit_url:null},o={unversionedId:"nt11",id:"nt11",isDocsHomePage:!1,title:"strip_prompt()",description:"`python",source:"@site/docs/11_netmiko_strip_prompt.md",slug:"/netmiko_strip_prompt_method",permalink:"/docs/netmiko_strip_prompt_method",editUrl:null,version:"current",sidebar_label:"~ strip_prompt()",sidebar:"someSidebar",previous:{title:"strip_command()",permalink:"/docs/netmiko_strip_command_method"},next:{title:"strip_backspace()",permalink:"/docs/netmiko_strip_backspace_method"}},s=[{value:"Example",id:"example",children:[]},{value:"Parameters",id:"parameters",children:[{value:"a_string",id:"a_string",children:[]}]}],u={toc:s};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'from netmiko import ConnectHandler\ndevice = {\n    "device_type":"cisco_ios",\n    "host":"192.168.10.12",\n    "username":"keremcan",\n    "password":"onemli",\n    "verbose":"True",\n    "secret":"onemli"}\n')),Object(i.b)("p",null,"\u200b    "),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("p",null,"This method strips the trailing device prompt from the output. In this example I will use the output from ",Object(i.b)("inlineCode",{parentName:"p"},"send_command"),". ",Object(i.b)("inlineCode",{parentName:"p"},"send_command")," method has the ",Object(i.b)("inlineCode",{parentName:"p"},"strip_prompt")," parameter and I need to change the default value of this parameter."),Object(i.b)("p",null,"Verify the ",Object(i.b)("inlineCode",{parentName:"p"},"prompt")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'with ConnectHandler(**device) as connection:\n    data=connection.send_command("show ip interface brief",strip_prompt=False)\n    print(data) # Print with prompt\n')),Object(i.b)("p",null,"Output"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"SSH connection established to 192.168.10.12:22\nInteractive SSH session established\nInterface              IP-Address      OK? Method Status                Protocol\nGigabitEthernet0/0     unassigned      YES unset  up                    up      \nGigabitEthernet0/1     unassigned      YES unset  up                    up      \nGigabitEthernet0/2     unassigned      YES unset  up                    up      \nGigabitEthernet0/3     unassigned      YES unset  up                    up      \nGigabitEthernet1/0     unassigned      YES unset  down                  down    \nGigabitEthernet1/1     unassigned      YES unset  up                    up      \nGigabitEthernet1/2     unassigned      YES unset  up                    up      \nGigabitEthernet1/3     unassigned      YES unset  up                    up      \nLoopback99             9.9.9.9         YES manual up                    up      \nVlan1                  192.168.10.12   YES NVRAM  up                    up      \nSW2# # this is the prompt\n")),Object(i.b)("p",null,"Use the ",Object(i.b)("inlineCode",{parentName:"p"},"strip_prompt()")," method"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'with ConnectHandler(**device) as connection:\n    data=connection.send_command("show ip interface brief",strip_prompt=False)\n    print(connection.strip_prompt(data))\n')),Object(i.b)("p",null,"Output"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Interface              IP-Address      OK? Method Status                Protocol\nGigabitEthernet0/0     unassigned      YES unset  up                    up      \nGigabitEthernet0/1     unassigned      YES unset  up                    up      \nGigabitEthernet0/2     unassigned      YES unset  up                    up      \nGigabitEthernet0/3     unassigned      YES unset  up                    up      \nGigabitEthernet1/0     unassigned      YES unset  down                  down    \nGigabitEthernet1/1     unassigned      YES unset  up                    up      \nGigabitEthernet1/2     unassigned      YES unset  up                    up      \nGigabitEthernet1/3     unassigned      YES unset  up                    up      \nLoopback99             9.9.9.9         YES manual up                    up      \nVlan1                  192.168.10.12   YES NVRAM  up                    up      \n  \n")),Object(i.b)("p",null,"\u200b    "),Object(i.b)("h2",{id:"parameters"},"Parameters"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},"def strip_prompt(self, a_string)\n")),Object(i.b)("p",null,"\u200b    "),Object(i.b)("p",null,"\u200b    "),Object(i.b)("h3",{id:"a_string"},"a_string"),Object(i.b)("p",null,"This parameter that does not contain a default value. So, when you enter the command to send the parameters, it is assigned to the ",Object(i.b)("inlineCode",{parentName:"p"},"a_string")," and it strips the trailing device prompt from the output as in the example above."),Object(i.b)("p",null,"\u200b    "))}c.isMDXComponent=!0},94:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),c=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=c(n),m=r,b=l["".concat(p,".").concat(m)]||l[m]||d[m]||i;return n?a.a.createElement(b,o(o({ref:t},u),{},{components:n})):a.a.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,p[1]=o;for(var u=2;u<i;u++)p[u]=n[u];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);